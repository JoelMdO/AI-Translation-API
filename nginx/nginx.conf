events {
    worker_connections 1024;
}

http {
    upstream fastapi_backend {
        server fastapi:443;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # SSL certificate files (self-signed for local development)
        ssl_certificate /certs/cert.pem;
        ssl_certificate_key /certs/key.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # CORS headers
        # add_header 'Access-Control-Allow-Origin' 'https://joelmdo-lab.dev' always;
                # CORS headers
        set $cors_origin '';
        if ($http_origin ~* (https://joelmdo-lab.dev|http://localhost(:[0-9]+)?)) {
            set $cors_origin $http_origin;
        }
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Request-Type, X-Service, X-Source-DB' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Request-Type, X-Service, X-Source-DB' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 204;
        }

        # Proxy all requests to FastAPI
        location / {
            proxy_pass https://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off; ##CHANGE ON PRODUCTION
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }
}
